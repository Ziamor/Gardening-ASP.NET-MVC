@model Gardening.ViewModels.PlantEditViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Plant</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Plant.ID" />
            <div class="form-group">
                <label asp-for="Plant.HardinessZoneID" class="control-label"></label>
                <select asp-for="Plant.HardinessZoneID" class="form-control" asp-items="ViewBag.HardinessZoneID"></select>
                <span asp-validation-for="Plant.HardinessZoneID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Plant.Name" class="control-label"></label>
                <input asp-for="Plant.Name" class="form-control" />
                <span asp-validation-for="Plant.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Type</label>
                <br />
                @for (int i = 0; i < Model.Tags.Count; i++)
                {
                    if (Model.Tags[i].IsSelected || true)
                    {
                <div class="tag">
                    @Html.HiddenFor(m => m.Tags[i].PlantTypeID)
                    @Html.CheckBoxFor(m => m.Tags[i].IsSelected)
                    @Html.LabelFor(m => m.Tags[i].IsSelected, Model.Tags[i].PlantType.Name)
                </div>
                    }
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
